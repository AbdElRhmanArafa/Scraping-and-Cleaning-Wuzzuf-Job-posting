similar_skills = {
    "CSS3": ["css", "CSS3", "css3"],
    "HTML5": ["html", "HTML5", "html5"],
    "JavaScript": ["js", "JavaScript", "jscript"],
    "Angular.Js": ["angular", "angular6", "angularjs"],
    "React.JS": ["react"],
    "Node.JS": ["Node"],
    "Vue.JS": ["vue"],
    "Laravel": ["Laravel", "laravelframework", "laravelphp", "laravel5"],
    "Twig": ["twig"],
    "Bootstrap": ["bootstrap"],
    "jQuery": ["jquery"],
    "PHP": ["php"],
    "Python": ["python"],
    "Ruby": ["ruby"],
    "C#": ["csharp"],
    "C++": ["cplusplus"],
    "C": ["c"],
    "Java": ["java"],
    "Clojure": ["clojure"],
    "TypeScrip": ["typescript"],
    " Communication Skills": ["communicationskills"],
    "Git": ["git"],
    "Responsive": ["responsivedesign"],
    "API": ["api"],
    "AWS": ["aws"],
    "Linux": ["linux", "unix"],
    "MySQL": ["mysql"],
    "PostgreSQL": ["postgresql"],
    "MongoDB": ["mongodb"],
    "SQL": ["sql"],
    "NoSQL": ["nosql"],
    "MSSQL": ["mssql", "microsoftsqlserver"],
    "Oracle": ["oracle"],
    "Big Data": ["bigdata"],
    "Visualization": ["datavisualization"],
    "Data Warehousing": ["datawarehousing", "warehouse", "datawarehouse"],
    "Data Integration": ["dataintegration"],
    "Data Cleaning": ["datacleaning"],
    "Data Management": ["datamanagement"],
    "Adobe Photoshop": ["adobephotoshop"],
    "Adobe Illustrator": ["adobeillustrator"],
    "Adobe InDesign": ["adobeindesign"],
    "Adobe XD": ["adobexd"],
    "Adobe After Effects": ["adobeaftereffects"],
    "Adobe Premiere Pro": ["adobepremierepro"],
    "Adobe Lightroom": ["adobelightroom"],
    "Adobe Dreamweaver": ["adobedreamweaver"],
    "Adobe Flash": ["adobeflash"],
    "Adobe Fireworks": ["adobefireworks"],
    "Adobe Flash Builder": ["adobeflashbuilder"],
    "Adobe Flash Catalyst": ["adobeflashcatalyst"],
    "Ionic Framework": ["ionicframework", "ionic"],
    "Agile": "agile",
    "Django": ["django"],
    "Ajax": ["ajax"],
    "RESTful ": ["restful", "restfulapis"],
    "Nuxt": ["nuxt", "nuxt3", "nuxt2"],
    "Next.js": ["nextjs", "next"],
    "React Native": ["reactnative"],
    "Tailwind CSS": "tailwindcss",
    "Express": ["express"],
    "Spring Boot": ["springboot"],
    "Figma": ["figma"],
    "ASP.NET": [
        "aspnet",
        "asp",
        "net",
        "netcore",
        "asp.net",
        "netwebforms",
        "netframework",
        "netwebapi",
        "netmvc",
    ],
    "Go": ["go", "golang"],
    "Docker": ["docker"],
    "MVC Architecture": ["mvc", "modelviewcontroller", "mvcarchitecture"],
    "JSON": ["json", "jsonapis", "jsonapi"],
    "XML": ["xml"],
    "OOP": ["oop", "objectorientedprogramming"],
    "Oracle": ["oracle", "oracle11g", "oracle10g"],
    "CI/CD": [
        "ci/cd",
        "continuousintegration/continuousdelivery",
        "ci",
        "cd",
        "cicd",
    ],
    "Cloud": ["cloud", "cloudcomputing", "cloudservices"],
    "Pipeline Management": ["pipelinemanagement", "pipeline"],
    "Bash Scripting": ["bash", "bashscripting"],
    "Azure": ["azure", "azurefunctions", "azurepipelines"],
    "Networking": ["networking", "network"],
    "Kubernetes": ["kubernetes", "k8s"],
    "GitHub": ["github", "gitlab"],
    "Jenkins": ["jenkins", "jenkinsci"],
    "Mongodb": [
        "mongodb",
        "mongodb3",
        "mongodb2",
        "mongodb1",
        "mongodb4",
        "mongodb5",
        "mongodb6",
    ],
    "Hadoop": ["hadoop", "hadoop2", "hadoop1", "hadoop3", "hadoop4", "hadoop5"],
    "Statistics": ["statistics", "statisticalanalysis"],
    "NLP": ["nlp", "naturallanguageprocessing"],
    "Data Base": ["database", "databases", "db", "dbs"],
    "Git Flow": ["gitflow", "gitflowworkflow"],
    "AutoCAD": ["autocad"],
    "Redux": ["redux"],
}


def clean_skills(skills, similar_skills):
    found = False
    cleaned_skills = set()
    for skill in skills:
        for key, value in similar_skills.items():
            for val in value:
                if skill.lower() == val.lower() or skill.lower() == key.lower():
                    cleaned_skills.add(key)
                    found = True
                    break
        if not found:
            cleaned_skills.add(skill)

    return cleaned_skills